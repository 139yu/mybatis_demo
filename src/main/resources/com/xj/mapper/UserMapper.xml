<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xj.mapper.UserMapper">

    <resultMap id="userRoleListMap" type="com.xj.domain.SysUser" extends="userMap">
        <collection property="roles" columnPrefix="role_" javaType="java.util.List" resultMap="com.xj.mapper.RoleMapper.roleMap"/>
    </resultMap>
    <select id="selectUserRoleListByUserId" resultMap="userRoleListMap">
        select
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.user_info,
            u.head_img,
            u.create_time,
            r.id role_id,
            r.role_name role_role_name,
            r.enabled role_enabled,
            r.create_by role_create_by,
            r.create_time role_create_time
        from
            sys_user u inner join sys_user_role ur on u.id = ur.user_id inner join sys_role r on r.id = ur.role_id
        where u.id = #{id}
    </select>
    <resultMap id="userMap" type="com.xj.domain.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result property="userInfo" column="user_info"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="userRoleMap1" type="com.xj.domain.SysUser">
        <id property="id" column="id"/>
        <result property="userName" column="user_name"/>
        <result property="userPassword" column="user_password"/>
        <result property="userEmail" column="user_email"/>
        <result column="user_info" property="userInfo"/>
        <result property="headImg" column="head_img" jdbcType="BLOB"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>

        <result property="role.id" column="role_id"/>
        <result property="role.roleName" column="role_name"/>
        <result property="role.enabled" column="enabled"/>
        <result property="role.createBy" column="create_by"/>
        <result property="role.createTime" column="role_create_time" jdbcType="TIMESTAMP"/>
    </resultMap>
    <resultMap id="userRoleMap2" type="com.xj.domain.SysUser" extends="userMap">
        <association property="role" columnPrefix="role_" javaType="com.xj.domain.SysRole">
            <result property="id" column="id"/>
            <result property="roleName" column="role_name"/>
            <result property="enabled" column="enabled"/>
            <result property="createBy" column="create_by"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        </association>
    </resultMap>
    <resultMap id="userRoleMap3" type="com.xj.domain.SysUser" extends="userMap">
        <!--
            column: 传过去的参数，可配置多个，用逗号隔开
        -->
         <association fetchType="lazy" property="role" column="{id = role_id}" select="com.xj.mapper.RoleMapper.selectRoleById"/>
    </resultMap>
    <!-- 4种一对一查询  -->
    <select id="selectUserAndRoleById4" resultMap="userRoleMap3" >
        select
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.user_info,
            u.head_img,
            u.create_time,
            ur.role_id
        from
            sys_user u inner join sys_user_role ur on u.id = ur.user_id
        where u.id = #{id}
    </select>
    <select id="selectUserAndRoleById3" resultMap="userRoleMap2" >
        select
            u.id,
            u.user_name,
            u.user_password,
            u.user_email,
            u.user_info,
            u.head_img,
            u.create_time,
            r.id role_id,
            r.role_name role_role_name,
            r.enabled role_enabled,
            r.create_by role_create_by,
            r.create_time role_create_time
        from
            sys_user u inner join sys_user_role ur on u.id = ur.user_id inner join sys_role r on r.id = ur.role_id
        where u.id = #{id}
    </select>
    <select id="selectUserAndRoleById2" resultMap="userRoleMap1">
        select
            u.id,
            u.user_name ,
            u.user_password,
            u.user_email,
            u.user_info,
            u.head_img,
            u.create_time,
            r.id role_id,
            r.role_name role_name,
            r.enabled enabled,
            r.create_by createBy,
            r.create_time role_create_time
        from
            sys_user u inner join sys_user_role ur on u.id = ur.user_id inner join sys_role r on r.id = ur.role_id
        where u.id = #{id}
    </select>
    <select id="selectUserAndRoleById1" resultType="com.xj.domain.SysUser">
        select
            u.id,
            u.user_name userName,
            u.user_password userPassword,
            u.user_email userEmail,
            u.user_info userInfo,
            u.head_img headImg,
            u.create_time createTime,
            r.id "role.id",
            r.role_name "role.roleName",
            r.enabled "role.enabled",
            r.create_by "role.createBy",
            r.create_time "role.createTime"
        from
            sys_user u inner join sys_user_role ur on u.id = ur.user_id inner join sys_role r on r.id = ur.role_id
        where u.id = #{id}
    </select>

    <select id="selectById" resultMap="userMap">
        select * from sys_user where id = #{id}
    </select>
    <select id="selectAll" resultType="com.xj.domain.SysUser">
        select
            id,
            user_name userName,
            user_password userPassword,
            user_email userEmail
         from
          sys_user
    </select>
    <select id="selectRolesByUserId" resultType="com.xj.domain.SysRole">
        select
         r.id id,
         r.role_name roleName,
         r.enabled enabled,
         r.create_by createBy,
         r.create_time createTime,
         u.user_name as "user.userName",
         u.user_email as "user.userEmail"
        from
          sys_role r
          join sys_user_role ur
          on r.id = ur.role_id
          join sys_user u on ur.user_id = u.id
          where
          u.id = #{userId}
    </select>

    <insert id="insert">
        insert into
        sys_user /*(
            id,
            user_name,
            user_password,
            user_email,
            user_info,
            head_img,
            create_time
            )*/
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null and userName != ''">
                user_name,
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password,
            </if>
            <if test="userEmail != null and userEmail != ''">
                user_email,
            </if>
            <if test="userInfo != null and userInfo != ''">
                user_info,
            </if>
            <if test="headImg != null and headImg != ''">
                head_img,
            </if>
            <if test="createTime != null and createTime != ''">
                create_time
            </if>
        </trim>
        values /*(
            #{id},
            #{userName},
            #{userPassword},
            #{userEmail},
            #{userInfo},
            #{headImg,jdbcType = BLOB},
            #{createTime,jdbcType = TIMESTAMP}
            )*/
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="userName != null and userName != ''">
                user_name = #{userName},
            </if>
            <if test="userPassword != null and userPassword != ''">
                user_password = #{userPassword},
            </if>
            <if test="userEmail != null and userEmail != ''">
                user_email = #{userEmail},
            </if>
            <if test="userInfo != null and userInfo != ''">
                user_info = #{userInfo},
            </if>
            <if test="headImg != null and headImg != ''">
                head_img = #{headImg,jdbcType = BLOB},
            </if>
            <if test="createTime != null and createTime != ''">
                create_time = #{createTime,jdbcType = TIMESTAMP}
            </if>
        </trim>
    </insert>

    <insert id="insert2" useGeneratedKeys="true" keyProperty="id">
        insert into
        sys_user (
            user_name,
            user_password,
            <if test="userEmail != null and userEmail != ''">
                user_email,
            </if>
            user_info,
            head_img,
            create_time
            )
        values (
            #{userName},
            #{userPassword},
            <if test="userEmail != null and userEmail != ''">
                #{userEmail},
            </if>
            #{userInfo},
            #{headImg,jdbcType = BLOB},
            #{createTime,jdbcType = TIMESTAMP}
            )
    </insert>

    <insert id="insert3">
        insert into
        sys_user (
            user_name,
            user_password,
            user_email,
            user_info,
            head_img,
            create_time
            )
        values (
            #{userName},
            #{userPassword},
            #{userEmail},
            #{userInfo},
            #{headImg,jdbcType = BLOB},
            #{createTime,jdbcType = TIMESTAMP}
            )
            <selectKey keyColumn="id" resultType="long" keyProperty="id" order="AFTER">
                SELECT LAST_INSERT_ID()
            </selectKey>
    </insert>

    <update id="updateById">
        update  sys_user
        set
            user_name=  #{userName} ,
            user_password=  #{userPassword},
            user_email  =  #{userEmail} ,
            user_info=  #{userInfo} ,
            head_img  =  #{headImg ,  jdbcType=BLOB} ,
            create_time  =  #{createTime ,  jdbcType=TIMESTAMP}
        where
            id  =  #{id}
    </update>

    <select id="selectRolesByUserIdAndRoleEnabled" resultType="com.xj.domain.SysRole">
        select
            r.id,
            r.role_name  roleName,
            r.enabled,
            r.create_by createBy,
            r.create_time createTime
        from
            sys_user u
        inner  join sys_user_role ur on u.id = ur.user_id
        inner join sys_role r on r.id = ur.role_id
        where u.id = #{userId} and r.enabled = #{enabled}
    </select>

    <select id="selectByUser" resultType="com.xj.domain.SysUser">
        select
          id,
          user_name userName,
          user_password userPassword,
          user_email userEmail,
          user_info userInfo,
          head_img headImg,
          create_time createTime
        from
          sys_user
        <!--where 1=1
        <if test="userName != null and userName != ''">
            and user_name like concat('%',#{userName},'%')
        </if>
        <if test="userEmail != null and userEmail != ''">
            and user_email = #{userEmail}
        </if>-->
        <where>
            <if test="userName != null and userName != ''">
                and user_name like concat('%',#{userName},'%')
            </if>
            <if test="userEmail != null and userEmail != ''">
                and user_email = #{userEmail}
            </if>
        </where>
    </select>
    
    <update id="updateByIdSelective">
        update sys_user
        set
         <if test="userName != null and userName != ''">
             user_name = #{userName},
         </if>
         <if test="userPassword != null and userPassword != ''">
             user_password = #{userPassword},
         </if>
         <if test="userEmail != null and userEmail != ''">
             user_email = #{userEmail},
         </if>
        <if test="userInfo != null and userInfo != ''">
            user_info = #{userInfo},
        </if>
        <if test="headImg != null">
            head_img = #{headImg,jdbcType=BLOB},
        </if>
        <if test="createTime != null">
            create_time = #{createTime,jdbcType = TIMESTAMP},
        </if>
        id = #{id}
        where id = #{id}
    </update>

    <select id="selectByIdOrUsername" resultType="com.xj.domain.SysUser">
        select
          id,
          user_name userName,
          user_password userPassword,
          user_email userEmail,
          user_info userInfo,
          head_img headImg,
          create_time createTime
        from sys_user
        where 1 = 1
        <choose>
            <when test="id != null">
                and id = #{id}
            </when>
            <when test="userName != null and userName != ''">
                and user_name = #{userName}
            </when>
            <otherwise>
                1 = 2
            </otherwise>
        </choose>
    </select>
    <select id="selectByIdList" resultType="com.xj.domain.SysUser">
        select
          id,
          user_name userName,
          user_password userPassword,
          user_email userEmail,
          user_info userInfo,
          head_img headImg,
          create_time createTime
        from sys_user
        where id in 
        <foreach collection="list" open="(" close=")" separator="," item="id" index="i">
            #{id}
        </foreach>
    </select>

    <insert id="insertList">
        insert into
          sys_user (user_name,user_password,user_email,user_info,head_img,create_time)
        values
        <foreach collection="list" item="user"  separator=",">
            (
            #{user.userName},
            #{user.userPassword},
            #{user.userEmail},
            #{user.userInfo},
            #{user.headImg,jdbcType = BLOB},
            #{user.createTime,jdbcType = TIMESTAMP})
        </foreach>
    </insert>

    <update id="updateByMap">
        update sys_user set 
        <foreach collection="_parameter" item="val" index="key" separator=",">
            ${key} = #{val}
        </foreach>
        where id = #{id}
    </update>
</mapper>